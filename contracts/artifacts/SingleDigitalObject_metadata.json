{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_age",
						"type": "uint256"
					},
					{
						"internalType": "enum ISingleDigitalObject.typeT",
						"name": "_typeOf",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getActor",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAge",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCompany",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDistribution",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getIeee1599",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getName",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumActor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumCompany",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumSynchronization",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSymbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSynchronization",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getType",
				"outputs": [
					{
						"internalType": "enum ISingleDigitalObject.typeT",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_actor",
						"type": "address[]"
					}
				],
				"name": "setActor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_age",
						"type": "uint256"
					}
				],
				"name": "setAge",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_company",
						"type": "address[]"
					}
				],
				"name": "setCompany",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_distribution",
						"type": "uint256[]"
					}
				],
				"name": "setDistribution",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "setName",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					}
				],
				"name": "setPrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					}
				],
				"name": "setSymbol",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_synchronization",
						"type": "address[]"
					}
				],
				"name": "setSynchronization",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum ISingleDigitalObject.typeT",
						"name": "_typeOf",
						"type": "uint8"
					}
				],
				"name": "setType",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getActor()": {
					"details": "This function returns the actor of this SingleDigitalObject"
				},
				"getAge()": {
					"details": "This function returns the age of this SingleDigitalObject"
				},
				"getCompany()": {
					"details": "This function returns the company of this SingleDigitalObject"
				},
				"getDistribution()": {
					"details": "This function returns the distribution of this SingleDigitalObject"
				},
				"getIeee1599()": {
					"details": "This function returns the ieee of this SingleDigitalObject"
				},
				"getName()": {
					"details": "This function returns the name of this SingleDigitalObject"
				},
				"getNumActor()": {
					"details": "This function returns the number of actors of this SingleDigitalObject"
				},
				"getNumCompany()": {
					"details": "This function returns the number of company of this SingleDigitalObject"
				},
				"getNumSynchronization()": {
					"details": "This function returns the number of synchronization (actor) of this SingleDigitalObject"
				},
				"getPrice()": {
					"details": "This function returns the price of this SingleDigitalObject"
				},
				"getSymbol()": {
					"details": "This function returns the symbol of this SingleDigitalObject"
				},
				"getSynchronization()": {
					"details": "This function returns the company of this SingleDigitalObject"
				},
				"getType()": {
					"details": "This function returns the type of this SingleDigitalObject"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner."
				},
				"setActor(address[])": {
					"details": "This function adds the ( `_actor` ) to the actor array "
				},
				"setAge(uint256)": {
					"details": "This function set the age of this SingleDigitalObject"
				},
				"setCompany(address[])": {
					"details": "This function adds the ( `_company` ) to the company array "
				},
				"setDistribution(uint256[])": {
					"details": "This function set the new distribution "
				},
				"setName(string)": {
					"details": "This function set the name of this SingleDigitalObject"
				},
				"setPrice(uint256)": {
					"details": "This function set the price of this SingleDigitalObject"
				},
				"setSymbol(string)": {
					"details": "This function set the symbol of this SingleDigitalObject"
				},
				"setSynchronization(address[])": {
					"details": "This function adds the ( `_synchronization` ) to the synchronization array "
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SingleDigitalObject.sol": "SingleDigitalObject"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/SingleDigitalObject.sol": {
			"keccak256": "0x3322c6ed85b42275640bce5790e095ee597f6e85878a6f498aa1c07aeecb2175",
			"license": "MIT",
			"urls": [
				"bzz-raw://9220b6dda2b53ad7e7a062a58e2f35fe9d7aef5cc59cc98fdbd3564242033c1e",
				"dweb:/ipfs/QmSidoH9eQ6wKn5G1NB7Rpjht3ot7J7aDcy8CNNnukaTtW"
			]
		},
		"interfaces/SingleDigitalObject_Interface.sol": {
			"keccak256": "0x69d00ae11407de261ebe8a6d62541f62ee67983cc13207bad40627067b03a9ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://2f9568ebc184fd6590dba05ff3e9faf2361131a9fc43f2daa877f2e34457d144",
				"dweb:/ipfs/QmeWpDqethdYFG2wtZc4mU8p2sHho5gdm3v3SLJA9naqnZ"
			]
		},
		"security/Ownable.sol": {
			"keccak256": "0xe458a7d53b65133946b243d83aa73bce59f5c6d87e516041e48e35c8d820ed0d",
			"license": "MIT",
			"urls": [
				"bzz-raw://b34d35939ac55ff40fd35d0813189cccb352fe4b0c83a6e19ffc2ecb96607ed8",
				"dweb:/ipfs/QmUerSDysorAjcEv5b2gXaSf7nxj3FGmUmpBgPwNVaQmrJ"
			]
		},
		"security/Pausable.sol": {
			"keccak256": "0x2cf95522e698185bfc6aef97d2acadab456309c066c76edf34eb2cf5efb563c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://ec14a4e3f7c0fc1687dd61d632a191fd0de7aa732cd4899034d112acab3a3cfd",
				"dweb:/ipfs/QmPZvSxryQwpPFzW4xHABzq88XfssKLneNX8dHTDrFijL4"
			]
		},
		"utils/Context.sol": {
			"keccak256": "0xf421acab26d86c8e2676a8f8f09ddba5c8b869b7112e905238d202618ce9dc97",
			"license": "MIT",
			"urls": [
				"bzz-raw://bc1300401374d5d154f1032423a7e50f9a87f9b2aa45a562ef0459aa8fd089f8",
				"dweb:/ipfs/QmXAGmmMroVZB5HBJyBP652sMYRpw39gu2pXZ6paasAUVR"
			]
		},
		"utils/array/Arrays.sol": {
			"keccak256": "0x6b293bf87132676f753795cc9930beadf9cf89875a6b8f4b3bedce4efd9d2c50",
			"license": "MIT",
			"urls": [
				"bzz-raw://38f9f05ed56bb3e0bdb6bfc92f9c496be7ec3f76f9b2905212cf395678d273c5",
				"dweb:/ipfs/QmacBwnEKJqBijm8gPtZ9mFhUm4Nr6E55Ug6iUv5KTX8Mm"
			]
		},
		"utils/array/Arrays_Interface.sol": {
			"keccak256": "0x08c11dfe7cb1a2505b2bc5dd62d442accffb2e495cc35f46ec78ac9812a4bea0",
			"license": "MIT",
			"urls": [
				"bzz-raw://58a66eb9e57d8315c77d8b85dcad1838eb641094f6764ca64a8db315235d449c",
				"dweb:/ipfs/QmdET2FrrBwgUpDLz7LLkify6BMiwcz9HgWrAy7sCRKVXG"
			]
		},
		"utils/math/Math.sol": {
			"keccak256": "0xeef5169569922d835c3494eaf80bf44c28db3906ba40b7174cc522ece94cc1b6",
			"license": "MIT",
			"urls": [
				"bzz-raw://1ad844b1bc1570da6c24e6b8750db204c631d22d26cedb37528059d02c4482c4",
				"dweb:/ipfs/Qmde5KacSoD9RDCPuseT53i6qxank21uPSCzkLHDwRYZc5"
			]
		}
	},
	"version": 1
}